# This is a basic workflow to help you get started with Actions
name: fetching

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform_actions:
    name: terraform
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v3
      - name: set up terraform hasicrop
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: configure aws cridentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-south-1"

      - name: terraform init
        run: |
          cd ec2
          terraform init
          terraform plan
          terraform apply -auto-approve
      - name: uploading the key-pair
        uses: actions/upload-artifact@v2
        with:
          name: tf-key-pair
          path: ec2/tf-key-pair8

  build2:
    needs: terraform_actions
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v3
      - name: set up terraform hasicrop
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: configure aws cridentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-south-1"

      - name: Fetch EC2 IPs
        run: |
          ls
          instances=$(aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" --query 'Reservations[*].Instances[*].PublicIpAddress')
          echo $instances
          echo $instances > ec2_ips.txt
          ls
          cat ec2_ips.txt

      - name: uploading the key-pair
        uses: actions/upload-artifact@v2
        with:
          name: copy data
          path: ec2_ips.txt

  build3:
    needs: build2
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v3
      - name: set up terraform hasicrop
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: configure aws cridentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-south-1"
      - name: Download the key-pair-file
        uses: actions/download-artifact@v2
        with:
          name: tf-key-pair, copy data 

      - name: connection
        run: |
          ls
          ec2_ips=$(<ec2_ips.txt)
          echo "$ec2_ips"
          for ip_array in $ec2_ips; do
            for ip in ${ip_array[@]//[\[\]\",]/}; do
              echo "IP Address: $ip"
              ssh -i tf-key-pair ec2-user@$ip
            done
          done


      


        

          
      # - run: |
      #     ls
      #     sudo apt-get update
      #     sudo apt-get install -y putty-tools
      #     puttygen --version
      #     puttygen tf-key-pair61 -O private -o tf-key-pair61.ppk
      #     ls

      # - name: uploading the key-pair
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: .ppk file
      #     path: tf-key-pair61.ppk




      
