# This is a basic workflow to help you get started with Actions
name: fetching

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform_actions:
    name: terraform
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v3
      - name: set up terraform hasicrop
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: configure aws cridentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-south-1"

      - name: terraform init
        run: |
          cd ec2
          terraform init
          terraform plan
          terraform apply -auto-approve
      - name: uploading the key-pair
        uses: actions/upload-artifact@v2
        with:
          name: tf-key-pair
          path: ec2/tf-key-pair8

  build2:
    # needs: terraform_actions
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v3
      - name: set up terraform hasicrop
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: configure aws cridentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-south-1"

      # - name: Download the key-pair-file
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: tf-key-pair

      # - run: ls
      - name: Extract EC2 IPs
        run: |
          IPS=$(aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" --query 'Reservations[*].Instances[*].{Instance:InstanceId}' --output json)
          echo "$IPS"
          echo "IPS=$IPS" >> $GITHUB_ENV

  deploy_to_ec2:
    needs: build2
    runs-on: ubuntu-latest
    steps:
      - name: Use EC2 IPs
        run: |
          echo "EC2 IP addresses are $IPS"

        

          
      # - run: |
      #     ls
      #     sudo apt-get update
      #     sudo apt-get install -y putty-tools
      #     puttygen --version
      #     puttygen tf-key-pair61 -O private -o tf-key-pair61.ppk
      #     ls

      # - name: uploading the key-pair
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: .ppk file
      #     path: tf-key-pair61.ppk




      
